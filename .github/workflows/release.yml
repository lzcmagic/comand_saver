name: Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            cgo: 0
          - goos: linux
            goarch: arm64
            cgo: 0
          - goos: windows
            goarch: amd64
            cgo: 0
          - goos: darwin
            goarch: amd64
            cgo: 0
          - goos: darwin
            goarch: arm64
            cgo: 0

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.5'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: ${{ matrix.cgo }}
        run: |
          mkdir -p dist/cs_${{ matrix.goos }}_${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            go build -tags "sqlite_omit_load_extension sqlite_static" -o "dist/cs_${{ matrix.goos }}_${{ matrix.goarch }}/cs.exe" -v
          else
            go build -tags "sqlite_omit_load_extension sqlite_static" -o "dist/cs_${{ matrix.goos }}_${{ matrix.goarch }}/cs" -v
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cs_${{ matrix.goos }}_${{ matrix.goarch }}
          path: dist/cs_${{ matrix.goos }}_${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Create release archives
        run: |
          cd dist
          for dir in */; do
            platform=${dir%/}
            tar -czf "${platform}.tar.gz" "$platform"
          done

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.tar.gz
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}